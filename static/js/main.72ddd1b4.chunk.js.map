{"version":3,"sources":["components/columns.js","components/BankTable.js","components/BankDetails.js","App.js","index.js"],"names":["COLUMNS","Header","accessor","BankTable","data","setSelectedRow","useState","category","setCategory","inputValue","setInputValue","columns","useMemo","inputOnChange","useAsyncDebounce","value","setFilter","undefined","history","useHistory","useTable","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","state","gotoPage","pageCount","setPageSize","prepareRow","pageIndex","pageSize","class","onChange","e","target","disabled","selected","map","column","id","type","placeholder","Table","bordered","hover","responsive","dark","style","tableLayout","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","onClick","push","values","ifsc","handleRowClick","cells","cell","getCellProps","length","defaultValue","pageNumber","Number","width","BankDetails","useParams","ifsc_code","Container","marginTop","bank_name","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","branch","bank_id","address","App","setData","loading","setLoading","error","setError","city","setCity","selectedRow","useEffect","a","axios","get","toUpperCase","res","status","Error","message","fetchData","className","exact","path","to","title","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.72ddd1b4.chunk.js","sourcesContent":["export const COLUMNS = [\r\n    // {\r\n    //     Header: 'City',\r\n    //     accessor: 'city'\r\n    // },\r\n    // {\r\n    //     Header: 'District',\r\n    //     accessor: 'district'\r\n    // },\r\n    // {\r\n    //     Header: 'State',\r\n    //     accessor: 'state'\r\n    // },\r\n    {\r\n        Header: 'Bank Name',\r\n        accessor: 'bank_name'\r\n    },\r\n    {\r\n        Header: 'IFSC Code',\r\n        accessor: 'ifsc'\r\n    },\r\n    {\r\n        Header: 'Branch',\r\n        accessor: 'branch'\r\n    },\r\n    {\r\n        Header: 'Bank ID',\r\n        accessor: 'bank_id'\r\n    },\r\n    {\r\n        Header: 'Address',\r\n        accessor: 'address'\r\n    }\r\n]","import React, { useMemo, useState } from 'react';\r\nimport { useTable, useSortBy, usePagination, useFilters, useAsyncDebounce } from 'react-table';\r\nimport { COLUMNS } from './columns';\r\nimport { Table } from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './BankTable.css';\r\n\r\nexport const BankTable = ({ data, setSelectedRow }) => {\r\n    const [category, setCategory] = useState(\"\");\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const columns = useMemo(() => COLUMNS, []);\r\n\r\n    const inputOnChange = useAsyncDebounce((category,value) => {\r\n        setFilter(`${category}`, value || undefined)\r\n    },1000);\r\n\r\n    const history = useHistory();\r\n    const handleRowClick = (row) => {\r\n        history.push(`/bank_details/${row.values.ifsc}`);\r\n      } \r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        pageOptions,\r\n        state,\r\n        gotoPage,\r\n        pageCount,\r\n        setPageSize,\r\n        setFilter,\r\n        prepareRow\r\n      } = useTable({\r\n        columns,\r\n        data\r\n    }, \r\n    useFilters,\r\n    useSortBy,\r\n    usePagination)\r\n\r\n    const { pageIndex, pageSize } = state;\r\n    return(\r\n        <>\r\n        <select value={category} class=\"inputElement\" onChange={e=>{\r\n            setCategory(e.target.value);\r\n            setInputValue(\"\");\r\n            }}>\r\n                <option value=\"\" disabled selected>Select field</option>\r\n                {columns.map(column => (\r\n                    <option key={column.accessor} value={column.accessor}>\r\n                        {column.Header}\r\n                    </option>\r\n            ))}\r\n        </select>\r\n        <input\r\n            id=\"searchQuery\"\r\n            class=\"inputElement\"\r\n            value={inputValue || ''}\r\n            type=\"search\"\r\n            placeholder=\"Search query\"\r\n            disabled={category===\"\"? true: false}\r\n            onChange={(e) => {\r\n                setInputValue(e.target.value);\r\n                inputOnChange(category, e.target.value);\r\n                //setFilter(`${category}`, e.target.value);\r\n            }}\r\n        />\r\n        <div class=\"fixTableHead\">\r\n        <Table bordered hover responsive dark style={{width:'600px'},{tableLayout: 'fixed'}} {...getTableProps()}>\r\n            <thead>\r\n            {headerGroups.map(headerGroup => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                    <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                        {column.render('Header')}\r\n                        <span>\r\n                            {column.isSorted? (column.isSortedDesc? '↓' : '↑') : ''}\r\n                        </span>\r\n                    </th>\r\n                ))}\r\n                </tr>\r\n            ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {page.map((row, i) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()} onClick={()=> {\r\n                            handleRowClick(row);\r\n                            setSelectedRow(row.values)}}>\r\n                            {row.cells.map(cell => {\r\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n        </div>\r\n            <div class=\"paginationDiv\">\r\n                <span class=\"paginationItems\">\r\n                    Page {' '}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong> {' '}\r\n                </span>\r\n                <span class=\"paginationItems\">\r\n                    | Go to page: {' '}\r\n                    <input type='number' defaultValue={pageIndex + 1}\r\n                    onChange = { e => {\r\n                        const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                        gotoPage(pageNumber)\r\n                    }} \r\n                    style ={{width: '50px'}}/>\r\n                </span>\r\n                \r\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                    {'<<'}\r\n                </button>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next\r\n                </button>\r\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                    {'>>'}\r\n                </button>\r\n                <select class=\"paginationItems\" value={pageSize} onChange={e=>{\r\n                    setPageSize(Number(e.target.value))\r\n                }}>\r\n                    {[10, 20, 30].map(pageSize => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                            Show {pageSize} rows\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        </>\r\n    )\r\n};","import { useParams } from \"react-router-dom\";\r\nimport { Container,ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst BankDetails = ({ data }) => {\r\n    const { ifsc_code } = useParams();\r\n    return(\r\n        <Container style={{marginTop: 35}}>\r\n            <h3><strong>{data.bank_name}</strong></h3>\r\n            <ListGroup style={{marginTop:50}}>\r\n                <ListGroupItem>\r\n                    <ListGroupItemHeading>Branch</ListGroupItemHeading>\r\n                    <ListGroupItemText>{data.branch} </ListGroupItemText>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <ListGroupItemHeading>IFSC</ListGroupItemHeading>\r\n                    <ListGroupItemText>{data.ifsc} </ListGroupItemText>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <ListGroupItemHeading>Bank ID</ListGroupItemHeading> \r\n                    <ListGroupItemText>{data.bank_id}</ListGroupItemText>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <ListGroupItemHeading>Address</ListGroupItemHeading> \r\n                    <ListGroupItemText>{data.address}</ListGroupItemText>\r\n                </ListGroupItem>\r\n            </ListGroup>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BankDetails;","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { BankTable } from './components/BankTable';\nimport { Container } from 'reactstrap';\nimport BankDetails from './components/BankDetails';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [city, setCity] = useState('MUMBAI');\n  const [selectedRow, setSelectedRow] = useState({});\n\n  useEffect(()=>{\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const res = await axios.get(`https://vast-shore-74260.herokuapp.com/banks?city=${city.toUpperCase()}`);\n         if (res.status !== 200){\n           throw Error ('Could not fetch data');\n         }\n        setData(res.data);\n        setError(null);\n        setLoading(false);\n      }\n      catch(err){\n        setLoading(false);\n        setError(err.message);\n      }\n    }\n    fetchData();\n  },[city]);\n\n  return (\n//    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"content\">\n        <Switch>\n        <Route exact path=\"/\"\n          render={() => {\n              return (\n                <Redirect to=\"/all_banks\" /> \n              )\n          }\n        }/>\n          <Route path=\"/all_banks\">\n            <Container style={{marginTop: 35}}>\n              <h2><strong>All Banks</strong></h2>\n              { error && \n                    <div>{ error }</div>\n                }\n              { loading && \n                    <div id=\"cover-spin\"></div>\n                }\n                \n              { data && \n                <div style={{marginTop: 25}}>\n                  <select class=\"inputElement\" value={city} onChange={e=>{\n                        setCity(e.target.value);\n                    }}>\n                        {['Mumbai', 'Kolkata', 'Bangalore', 'Delhi', 'Kochi'].map(city => (\n                            <option key={city} value={city}>\n                                {city}\n                            </option>\n                        ))}\n                    </select>\n                  <BankTable data={data} setSelectedRow={setSelectedRow}  title=\"All Banks\"/>\n                </div>\n                }\n            </Container>\n          </Route>\n          <Route path=\"/bank_details/:ifsc_code\">\n              <BankDetails data={selectedRow}/>\n          </Route>\n        </Switch>\n      </div>\n//    </Router>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />,\n </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}